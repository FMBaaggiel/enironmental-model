# -*- coding: utf-8 -*-
"""
Created on Tue Oct 31 15:56:36 2017

@author: ml16fmhb
"""

import random
class Agent():
    def __init__ (self, environment, agents, neighbourhood, y, x):
        self.x = 0
        self.y = 0
        if (x == None):
            self.x = random.randint(0,100)
        else:
            self.x = x 
         
        if (y == None):
            self.y = random.randint(0,100)
        else:
            self.y = y 
        
        self.environment = environment
        self.store = 0 # We'll come to this in a second. 
        self.agents = agents
      
        print(agents)
    
    def move(self):
   
        if random.random() < 0.5:
             self.x= (self.x + 1) % 100
        else:
            self.x = (self.x - 1) % 100
        if random.random() < 0.5:
             self.y= (self.y + 1) % 100
        else:
            self.y = (self.y - 1) % 100
            
    def eat(self): # can you make it eat what is left?
        if self.environment[self.x][self.y] > 10:
         self.environment[self.x][self.y] -= 10
         self.store += 10
         
    def share_with_neighbours(self, neighbourhood):
        for agent in self.agents:
             dist = self.distance_between(agent) 
             if dist <= neighbourhood:
                 sum = self.store + agent.store
                 ave = sum /2
                 self.store = ave
                 agent.store = ave
                 #print("sharing " + str(dist) + " " + str(ave))
 

    def distance_between(self, agent):
        return (((self.x - agent.x)**2) + ((self.y - agent.y)**2))**0.5 
# Loop through the agents in self.agents .
     # Calculate the distance between self and the current other agent:
    # distance = self.distance_between(agent) 
     # If distance is less than or equal to the neighbourhood
         # Sum self.store and agent.store .
         # Divide sum by two to calculate average.
         # self.store = average
             # agent.store = average
     # End if
 # End loop